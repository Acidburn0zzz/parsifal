Software Engineering
 - Expand binaryRecord to handle update (when using enumerated for example) and to_String.
 - Use V_Unit = None to handle optional fields.


Chain categorization
 - Add signature
 - Add trust store
 - Avoid loops
 - What is a chain -> create a new object
   * a list of certificates, and for each
     - origin (cert n in chain, Mozilla store, IE store)
     - trusted
   * validity span
   * algos used
   * subject

WTF? Is extension parsing fatal?
  Answer seen: 21310000, current answer: 0:99.196.116.39
  Parsing error (SpecFatallyViolated): Trailing bytes in a parsed objects inside {authorityKeyIdentifier[2/26], authorityKeyIdentifier[0/24]}
  Answer seen: 21320000, current answer: 0:99.196.196.103


X509
 - Add SAN, AIA and CRLDP extensions
 - Write code to parse PK, Sig.
 - Rewrite PK/Signature as modules.
 - Add a way to enrich/deep parse (to parse PK/sig/exts a posteriori)
 - Use specific warnings for each interesting X.509 warnings.

TLS
 - Enrich TLS parser.
 - fake_len -> can override computed len
 - tls.dump -> calls record.split if needed
 - record.split -> TODO
 - Add parser for SSLv2.

Modules
 - MapModule: Add a _dict or _params magic objects ? Remove all _ ?
 - Write the missing update/dump functions
 - Problem with @enriched... it does not work if a sub-dictionary is modified...

Language
 - Add a read_all (stream -> string) with an argument (max)
 - Write a simple compare function instead of all the equal/lt functions
 - Add a library to filter and extract certs, either in native or interpreted form
 - Add a way to import new native functions (Dynlink for native, equivalent to load for scripts)
 - Add encode/decode for base64 + gzip
 - Custom outputs (global _output, _error) for print/errors function
 - Add crypto through external bindings
 - Add for loops, break n, continue n ?
 - concurrentmap (Nproc, OutputTemplate, fun (verif pas d'effet de bord hors la fonction))

Lexer / Parser
 - Improve the error messages of the lexer/parser
 - Handle correctly multiply embedded () "" and ${} with a stack ?!
 - Catch parsing errors when they are due to an incomplete parse -> this way, we could wait for what is to come "> for if "-style

typing
 - Add type constraints in the language, to help understanding errors.

asn1
 - Write in FAcesl a asn1parse like

NewParsingEngine
 - Document the invariants in string_input...
