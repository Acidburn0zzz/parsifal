let tls_versions = [
  0x0002, "V_SSLv2", "SSLv2";
  0x0300, "V_SSLv3", "SSLv3";
  0x0301, "V_TLSv1", "TLSv1.0";
  0x0302, "V_TLSv1_1", "TLSv1.1";
  0x0303, "V_TLSv1_2", "TLSv1.2";
]

let tls_content_types = [
  0x14, "CT_ChangeCipherSpec", "ChangeCipherSpec";
  0x15, "CT_Alert", "Alert";
  0x16, "CT_Handshake", "Handshake";
  0x17, "CT_ApplicationData", "ApplicationData";
  0x18, "CT_Heartbeat", "Heartbeat";
]

let tls_alert_levels = [
  1, "AL_Warning", "Warning";
  2, "AL_Fatal", "Fatal";
]

let tls_alert_types = [
  0,  "AT_CloseNotify", "CloseNotify";
  10, "AT_UnexpectedMessage", "UnexpectedMessage";
  20, "AT_BadRecordMAC", "BadRecordMAC";
  21, "AT_DecryptionFailed", "DecryptionFailed";   (* Reserved *)
  22, "AT_RecordOverflow", "RecordOverflow";
  30, "AT_DecompressionFailure", "DecompressionFailure";
  40, "AT_HandshakeFailure", "HandshakeFailure";
  41, "AT_NoCertificate", "NoCertificate";         (* Reserved *)
  42, "AT_BadCertificate", "BadCertificate";
  43, "AT_UnsupportedCertificate", "UnsupportedCertificate";
  44, "AT_CertificateRevoked", "CertificateRevoked";
  45, "AT_CertificateExpired", "CertificateExpired";
  46, "AT_CertificateUnknown", "CertificateUnknown";
  47, "AT_IllegalParameter", "IllegalParameter";
  48, "AT_UnknownCA", "UnknownCA";
  49, "AT_AccessDenied", "AccessDenied";
  50, "AT_DecodeError", "DecodeError";
  51, "AT_DecryptError", "DecryptError";
  60, "AT_ExportRestriction", "ExportRestriction"; (* Reserved *)
  70, "AT_ProtocolVersion", "ProtocolVersion";
  71, "AT_InsufficientSecurity", "InsufficientSecurity";
  80, "AT_InternalError", "InternalError";
  90, "AT_UserCanceled", "UserCanceled";
  100,"AT_NoRenegotiation", "NoRenegotiation";
  110,"AT_UnsupportedExtension", "UnsupportedExtension";
]

let hs_message_types = [
  0,  "HT_HelloRequest", "HelloRequest";
  1,  "HT_ClientHello", "ClientHello";
  2,  "HT_ServerHello", "ServerHello";
  11, "HT_Certificate", "Certificate";
  12, "HT_ServerKeyExchange", "ServerKeyExchange";
  13, "HT_CertificateRequest", "CertificateRequest";
  14, "HT_ServerHelloDone", "ServerHelloDone";
  15, "HT_CertificateVerify", "CertificateVerify";
  16, "HT_ClientKeyExchange", "ClientKeyExchange";
  20, "HT_Finished", "Finished";
]

let client_certificate_types = [
  1,  "CCT_RSASign", "RSASign";
  2,  "CCT_DSSSign", "DSSSign";
  3,  "CCT_RSAFixedDH", "RSAFixedDH";
  4,  "CCT_DSSFixedDH", "DSSFixedDH";
  5,  "CCT_RSAEphemeralDH", "RSAEphemeralDH";   (* RESERVED *)
  6,  "CCT_DSSEphemeralDH", "DSSEphemeralDH";   (* RESERVED *)
  20, "CCT_FortezzaDMS", "FortezzaDMS";         (* RESERVED *)
]

let hash_algorithms = [
  0,  "HA_None", "None";
  1,  "HA_MD5", "MD5";
  2,  "HA_SHA1", "SHA1";
  3,  "HA_SHA224", "SHA224";
  4,  "HA_SHA256", "SHA256";
  5,  "HA_SHA384", "SHA384";
  6,  "HA_SHA512", "SHA512";
]

let signature_algorithms = [
  0,  "SA_Anonymous", "Anonymous";
  1,  "SA_RSA", "RSA";
  2,  "SA_DSA", "DSA";
  3,  "SA_ECDSA", "ECDSA";
]


let enums = [
  "tls_version", tls_versions, UnknownVal "V_Unknown";
  "tls_content_type", tls_content_types, UnknownVal "CT_Unknown";
  "tls_alert_level", tls_alert_levels, UnknownVal "AL_Unknown";
  "tls_alert_type", tls_alert_types, UnknownVal "AT_Unknown";

  "hs_message_type", hs_message_types, UnknownVal "HT_Unknown";

  "client_certificate_type", client_certificate_types, UnknownVal "CCT_Unknown";
  "hash_algorithm", hash_algorithms, UnknownVal "HA_Unknown";
  "signature_algorithm", signature_algorithms, UnknownVal "SA_Unknown";
]

