TODO
 - ASN.1: Clean up options in mk_asn1 and handle_*
 - ASN.1: Add dump and print functions

 - Useful: getopt tuning (help usage messages [principal and details], multiline descriptions, clear_list)
 - probe_server: Add a retry option
 - probe_server: Add a way to handle extensions
 - tlsEngine: put 'a result_type and handle_answer logic from probe_server into TlsEngine
 - Useful: write quick functions to open and read files with lwt_parse funs
 - Useful: add a function "connect : string (host) -> int (port) -> tls_record Lwt_mvar t (where records read are sent) -> Lwt_io output"
 - Useful: add a function "process_in : tls_record Lwt_mvar t -> tls_context -> tls_record Lwt_mvar t" which tries and aggregates messages, enrich handshakes and put one by record. When compression/cryptography works, it will also take that into account.
 - Useful: add a function "process_out" to compress/mac/encrypt and slice in records of the correct length.
 - Crypto/PKCS#1: Add support for RSA / DSA
 - Useful: add a exact_parse_<obj> : string -> <obj> for top-level <obj> (OK for ASN.1. One more option for Records/Choices)
 - Useful: use lwt_parse_answer_dump and produce some easy statistics to confirm it works

 - ASN.1: handle constraints, optional fields, choices
 - ASN.1: Add UTCTime / ValidityTime handling (choices)
 - ASN.1: Add stg to have parse_distinguished_name (we need aliases for sequences of and sets of)
 - ASN.1: Add support for ObjectIdentifiers (global registery and magic functions)
 - ASN.1: Refine AlgorithmIdentifier / HashAlgorithm / PKAlgorithm / RDN support
 - ASN.1: Add support for RSA/DSA public key and signature
 - ASN.1: Support extensions
 - ASN.1: Parse certificates with all the previous features: RSA handling, DN.short, extensions
 - ASN.1: use "extract_asn1_object_opt"/"parse_asn1_object_opt" in mk_asn1.mk_parse_fun to have shorter generated code?

 - Binrecs: Clean up options in hd_binrecs
 - Binrecs: add options for fields (optional, change the value of context, remove Implicit/Explicit)
 - Binrecs: add options for record descriptions (post-build checks)
 - TLS: use  the post-build feature to constrain a binrec (length of 2^14 in TlsRecord)

 - Crypto: Add support for PRNG

 - Tools: factor all the little programs when possible.
 - Add a way to automagically enrich the context (tlsEngine with an automata)
 - Add a ciphersuite database with useful informations
 - Write the automata (client, server, transparent proxy, normalizing proxy)
 - Add SSLv2 support

 - Sort all the files present in AceSL-hg and co.
 - Add MakefileV6
 - Make directories (asn1, tls, baseEngines, .generated)

 - TLS: Describe Heartbeat messages
 - TLS: Add all the missing enums

 - Tools: acu (AceSL Cert Util) to read certs / pubkeys / privkeys and manipulate them

 - Learn how to pretty print Caml code (and stop using Printf ;-))

 - Check if Lwt pipes are closed properly
 - Rewrite get_in / get_out in lwtParsingEngine in case the length is too big (with a customizable threshold)
   * it should use a pipe and call the lwt_parse function for the subtype.
   * lwt_parse_*_list/string should take an optional parameter lwt?
   * asn1 only implements DER so we should not need lwt_parse functions.


 - Write Integers as records with mutable values
    * raw : string option
    * bigint : Big_int.t option
  + functions to manipulate them

 - Write .mli files

 - Add unit tests

 - add a magic_print function ("print handshake_content.params.dh_p" should work)


 - check-ssl-server
   * vérifier versions acceptées
   * versions préférée (avec CH SSLv2 et CH TLS divers)
   * vérifier l'intolérance de version (CH 0x03ff)

   * vérifier les suites acceptées
   * suites préférées (en fonction du CH SSLv2 etc)

   * compression acceptées

   * extension acceptées
   * intolérance aux extensions

   * qualité du ServerRandom

   * reprise de session : session id / session ticket

   * incohérence entre Record.version et ClientHello.version (intolérance et qualité des réponses)

   * qualité du groupe DHE
   * qualité du param DHE choisi
   * qualité du groupe ECDHE
   * qualité du param ECDHE choisi
   * compatibilité avec les EC

   * acceptation du SNI ?

   * acceptation de la renégo
   * renégo sécurisée

   * truc anti-downgrade dans le CKE
     - première fois
     - en cas de changement après renégo / reprise de session

   * support d'1 message HS en plusieurs record
   * support de plusieurs messages HS en 1 record
   * split en morceaux de moins de 10 octets / en morceaux de plus de 2^14 octets
   * ajout de record vide
   * réaction à un message Alert au milieu de messages Handshake
   * réaction à un message Alert au milieu d'un message Handshake
   * réaction à des alerts fatales ou pas

   * certificats ?!
     - numéro de série
     - certs dupliqués
     - certs non utilisés
     - certs manquant
     - algos / tailles de clé
     - extensions X.509
       + basic constraints
       + KU, EKU, nsCertType
       + Certificate Polices et EV
       + SKI / AKI
     - qualité des DNs
     - dénomination correcte du serveur (CN + SAN)
     - dates de validité
     - révocation

