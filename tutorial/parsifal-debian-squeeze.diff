diff --git a/core/parsifal.ml b/core/parsifal.ml
index cae9d40..a342849 100644
--- a/core/parsifal.ml
+++ b/core/parsifal.ml
@@ -1,5 +1,24 @@
 open Lwt
 
+let openfile filename flags mode =
+  return (Lwt_unix.openfile filename flags mode)
+
+let close fd =
+  return (Lwt_unix.close fd)
+
+
+let wrap f () =
+  try return (f ())
+  with e -> fail e
+
+let wrap1 f x =
+  try return (f x)
+  with e -> fail e
+
+let wrap2 f x y =
+  try return (f x y)
+  with e -> fail e
+
 
 (*********************)
 (* Trivial functions *)
@@ -343,7 +362,7 @@ let input_of_fd ?verbose:(verbose=true) ?enrich:(enrich=DefaultEnrich) name fd =
   input_of_channel ~verbose:verbose ~enrich:enrich name ch
 
 let input_of_filename ?verbose:(verbose=true) ?enrich:(enrich=DefaultEnrich) filename =
-  Lwt_unix.openfile filename [Unix.O_RDONLY] 0 >>= fun fd ->
+  openfile filename [Unix.O_RDONLY] 0 >>= fun fd ->
   input_of_fd ~verbose:verbose ~enrich:enrich filename fd
 
 
diff --git a/ssl-tools/disturber.ml b/ssl-tools/disturber.ml
index 8497041..59a263b 100644
--- a/ssl-tools/disturber.ml
+++ b/ssl-tools/disturber.ml
@@ -117,8 +117,8 @@ let rec accept sock =
   let oi = forward dumb_update (empty_state "S->C") o inp in
   let client =
     catch (fun () -> pick [io; oi; handle_timeout client_state]) catcher >>= fun () ->
-    Lwt_unix.close out >>= fun () ->
-    Lwt_unix.close inp
+    close out >>= fun () ->
+    close inp
   in
   join [client; accept sock]
 
diff --git a/ssl/test/test_tls_record.ml b/ssl/test/test_tls_record.ml
index 30c31e8..93050d6 100644
--- a/ssl/test/test_tls_record.ml
+++ b/ssl/test/test_tls_record.ml
@@ -1,10 +1,11 @@
 open Lwt
+open Unix
 open Lwt_unix
 open Parsifal
 open Tls
 
 let do_stg () =
-  Lwt_unix.openfile Sys.argv.(1) [O_RDONLY] 0o640 >>= fun fd ->
+  openfile Sys.argv.(1) [O_RDONLY] 0o640 >>= fun fd ->
   input_of_fd "TLS Record" fd >>= fun input ->
   enrich_record_content := true;
   lwt_parse_tls_record None input >>= fun tls_record ->
diff --git a/syntax/parsifalSyntax.ml b/syntax/parsifalSyntax.ml
index 522a575..e20ee78 100644
--- a/syntax/parsifalSyntax.ml
+++ b/syntax/parsifalSyntax.ml
@@ -440,7 +440,7 @@ let mk_parse_fun lwt_fun _loc c =
   let mk_return e = if lwt_fun then <:expr< Lwt.return $e$ >> else e
   and mk_compose f g x = (* f (g x) *)
     if lwt_fun
-    then <:expr< Lwt.bind ($g$ $x$) (Lwt.wrap1 $f$) >>
+    then <:expr< Lwt.bind ($g$ $x$) (Parsifal.wrap1 $f$) >>
     else <:expr< $f$ ($g$ $x$) >>
   and mk_let_in x v e = (* let x = v in e *)
     if lwt_fun
